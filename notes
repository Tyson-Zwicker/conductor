
Kinds of game objects:

1. Game Entity:
  - exists in game coordinates which can change
  - can rotate
  - has own velocity and spin (is Mover)
  - on screen position affected by the camera position and zoom levels.
  - can interact with mouse
  - can contain subparts
  - can have text label (with offset, affected by zoom level)
  - must have concept of toggle and radio

2. Particle:
  - has own velocity (is Mover)
  - exists in game coordinates which change
  - position can change with camera and zoom levels
  - do not interact with mouse.
  - do not have label

3. Button:
  - fixed on screen position (no game coordinates) (is NOT mover)
  - bounds do not need to be recalculated.
  - can interact with mouse
  - can have text label (fixed offset - centered in bounds)
  - must have concept toggle and radio

Commonality:

  - they all need to have bounds in order to work with the mouse
  - they all need to have a sprite to represent them
  - most need a click event
  - most need a hover and press alternate sprite
  - most need a toggle setting.
  - most need a text label
  - buttons need a "fixed screen" coordinate.

TASKS:
  * +allow for unfilled sprite
  * +attach text (with offset)
  * +add camera translation 
  * +add camera zoom functionality to draw..
  * +add fixed screen coords (for buttons)
  * +add mouse-wheel event, provide an option for the user to enable it, and have it change the camera zoom level 
    automatically.
  * +add alternate sprites for hover and press.
  * +test mouse functionality.
  * +add parts.
  * +add velocity and spin
  * implement a color system (for particle fade)
  * add particles
  * add a function that will add a user-defined function to be called when the canvas is clicked, but no game object was
    the recipient of the click (the mouse clicked nothing)
  
NOTE: Remember all the sprites should be drawn such that the right side of the screen (x+) is the "front" of the 
sprite.  

TODO:  Change all references to angles to DEGREES in the PUBLIC functions of the conductor. Convert them to radians
there.  Everywhere else should continue to use radians, but most people think in degress so... make it easier.

TODO:  Everywhere you check for object existance and throw an error: Get rid of the else statement.  If an error 
if thrown the rest of the code won't be reached, so the else just adds to unnecessary branching/indentation.